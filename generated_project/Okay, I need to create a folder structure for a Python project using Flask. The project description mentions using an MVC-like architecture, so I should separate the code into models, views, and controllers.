# project_name/config.py

import os
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

# Database configuration
DATABASE = {
    'drivername': 'postgresql',
    'username': os.environ.get('DB_USERNAME', 'postgres'),
    'password': os.environ.get('DB_PASSWORD', 'postgres'),
    'host': os.environ.get('DB_HOST', 'localhost'),
    'port': os.environ.get('DB_PORT', '5432'),
    'database': os.environ.get('DB_NAME', 'finance_manager')
}

# Create the database engine
engine = create_engine(f"postgresql://{DATABASE['username']}:{DATABASE['password']}@{DATABASE['host']}:{DATABASE['port']}/{DATABASE['database']}")

# Create a configured "Session" class
Session = sessionmaker(bind=engine)

# Create a base class which maintains a catalog of Table objects within a database.
Base = declarative_base()